{"version":3,"sources":["ColorBoxLightsOut/Box.tsx","Gallery-Layout/Gallery.tsx","Gallery/LightsOut.tsx","App.tsx","index.tsx"],"names":["Corner","InnerMachineState","OuterMachineState","Box","state","innerState","ABSENT","outerState","OUT","computeSizeCss","width","props","height","enterHandler","beenEntered","index","leaveHandler","beenLeft","sink","RETURNING","setState","SINKING","IN","unSink","SUNK","includes","clickHandler","beenClicked","turn","TURNING","handleTransitionEnd","event","persist","currState","propertyName","toggleMe","isTurning","this","isSunk","sunkStates","classes","isTargeted","getCornerRoundingClass","frozen","className","style","onMouseEnter","onMouseLeave","active","onClick","onTransitionEnd","prevProps","prevState","turnTrigger","sinkTrigger","rounded","TL","TR","BL","BR","ALL","NONE","React","Component","Gallery","boxSize","_computeBoxSize","boxes","renderBoxes","document","documentElement","setProperty","durationInSec","margin","Math","floor","min","window","innerWidth","innerHeight","_computePaddingInPage","numberOfBoxesPerSide","LightsOut","config","allRounded","initializeWinnableConfig","targetedBoxes","Array","fill","turnTriggers","sinkTriggers","map","_","gameOn","cornerToRound","handleClicked","handleEntered","handleLeft","toggleTargetedBox","key","i","currSt","sinkAroundIndex","unSinkAroundIndex","turnAroundIndex","newVals","slice","n","total","result","random","getRegionAroundIndex","forEach","j","message","titleClass","side","region","push","triggerVals","targetedFlags","some","boxActive","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d4a61418.chunk.js","sourcesContent":["import React from 'react';\nimport './Box.css';\n\nexport enum Corner {\n  TL, TR, BL, BR, NONE, ALL\n}\n\nexport interface BoxProps {\n  width: number;\n  height: number;\n  active: boolean;\n  isTargeted: boolean;\n  turnTrigger: number;\n  sinkTrigger: number;\n  beenClicked: (index: number) => void;\n  beenEntered: (index: number) => void;\n  beenLeft: (index: number) => void;\n  toggleMe: (index: number) => void;\n  index: number;\n  rounded: Corner;\n  frozen: boolean;\n}\n\ninterface BoxState {\n  innerState: InnerMachineState,\n  outerState: OuterMachineState,\n}\n\nenum InnerMachineState {\n  ABSENT = 'absent',\n  SINKING = 'sinking',\n  SUNK = 'sunk',\n  TURNING = 'turning',\n  RETURNING = 'returning'\n}\n\nenum OuterMachineState {\n  IN = 'in',\n  OUT = 'out'\n}\n\nclass Box extends React.Component<BoxProps> {\n  state: BoxState = {\n    innerState: InnerMachineState.ABSENT,\n    outerState: OuterMachineState.OUT,\n  }\n\n  get sunkStates(): InnerMachineState[] {\n    return [\n      InnerMachineState.SINKING,\n      InnerMachineState.SUNK,\n      InnerMachineState.RETURNING\n    ]\n  };\n\n\n  render() {\n    const isTurning = this.state.innerState === InnerMachineState.TURNING;\n    const isSunk = this.sunkStates.includes(this.state.innerState);\n    const showAsTargeted = this.props.isTargeted\n      && isSunk\n      && ![\n        InnerMachineState.RETURNING,\n        InnerMachineState.RETURNING,\n        InnerMachineState.ABSENT\n      ].includes(this.state.innerState);\n    const classes: string = \"ColorBoxLightsOut\" \n      + (isTurning ? \" turning\" : \"\")\n      + (isSunk  ? \" sunk\" : \"\")\n      + (showAsTargeted ? \" targeted\" : \"\")\n      + (this.getCornerRoundingClass())\n      + (this.props.frozen ? ' frozen' : '');\n    return (\n      <div className={classes}\n        style={this.computeSizeCss()}\n        onMouseEnter={this.enterHandler}\n        onMouseLeave={this.leaveHandler}\n        >\n        <div className={\"inner\" + (this.props.active ? '' : ' transparent')}\n          onClick={this.clickHandler}\n          onTransitionEnd={this.handleTransitionEnd}></div>\n        </div>\n      )\n  }\n\n  componentDidUpdate(prevProps: BoxProps, prevState: BoxState){\n    if (prevProps.turnTrigger < this.props.turnTrigger){\n      this.turn();\n    }\n    if (prevProps.sinkTrigger < this.props.sinkTrigger){\n      this.sink();\n    }\n    if (prevProps.sinkTrigger > this.props.sinkTrigger){\n      this.unSink();\n    }\n  }\n  \n  computeSizeCss = () => ({\n    width: this.props.width+'px',\n    height: this.props.height+'px'\n  });\n\n  enterHandler = () => {\n    this.props.beenEntered(this.props.index);\n  }\n  leaveHandler = () => {\n    this.props.beenLeft(this.props.index);\n  }\n  \n  sink = () => {\n    switch (this.state.innerState) {\n      case InnerMachineState.ABSENT:\n      case InnerMachineState.RETURNING:\n        this.setState({\n          innerState: InnerMachineState.SINKING,\n          outerState: OuterMachineState.IN\n        });\n        return;\n      default:\n        this.setState({\n          outerState: OuterMachineState.IN\n        });\n        return;\n    }\n  }\n\n  unSink = () => {\n    if (\n      [InnerMachineState.SINKING, InnerMachineState.SUNK].includes(\n        this.state.innerState\n      )\n    ) {\n      this.setState({\n        innerState: InnerMachineState.ABSENT,\n        outerState: OuterMachineState.OUT\n      });\n      return;\n    }\n    this.setState({ outerState: OuterMachineState.OUT });\n  }\n\n  clickHandler = () => {\n    this.props.beenClicked(this.props.index);\n  }\n\n  turn = () => {\n    switch (this.state.innerState) {\n      case InnerMachineState.SINKING:\n      case InnerMachineState.SUNK:\n        this.setState({innerState: InnerMachineState.TURNING});\n        return;\n      default:\n        return;\n    }\n  }\n\n  handleTransitionEnd = (event: React.TransitionEvent<HTMLDivElement>) => {\n    event.persist();\n    const update = (currState: BoxState) => {\n      if (event.propertyName === 'font-size') {\n        switch (currState.innerState) {\n          case InnerMachineState.SINKING:\n            return {innerState: InnerMachineState.SUNK}\n          default:\n            break;\n        }\n      }\n      \n      if (event.propertyName === 'font-weight') {\n        switch (currState.innerState) {\n          case InnerMachineState.TURNING:\n            this.props.toggleMe(this.props.index);\n            return {innerState: InnerMachineState.RETURNING};\n          case InnerMachineState.RETURNING:\n            return currState.outerState === OuterMachineState.OUT\n              ? {innerState: InnerMachineState.ABSENT}\n              : {innerState: InnerMachineState.SUNK};\n          default:\n            break;\n        }\n      }\n    }\n    this.setState(update);\n  };\n\n  getCornerRoundingClass() {\n    switch (this.props.rounded) {\n      case Corner.TL:\n        return ' top-left-rounded';\n      case Corner.TR:\n        return ' top-right-rounded';\n      case Corner.BL:\n        return ' bottom-left-rounded';\n      case Corner.BR:\n        return ' bottom-right-rounded';\n      case Corner.ALL:\n        return ' all-rounded';\n      case Corner.NONE:\n        return '';\n    }\n  }\n}\n\n\nexport default Box;","import React from 'react';\nimport './Gallery.css'\n\nexport interface GalleryProps {\n  numberOfBoxesPerSide: number;\n  durationInSec: number;\n  margin: number;\n  renderBoxes: (boxSize: number) => any[]\n}\n\nexport interface GalleryState {\n  colors: string[];\n  boxSize: number;\n}\n\nclass Gallery extends React.Component<GalleryProps> {\n  constructor(props: GalleryProps) {\n    super(props);\n    document.documentElement.style.setProperty('--duration', props.durationInSec+'');\n  }\n\n  private _computePaddingInPage() {\n    return 2 * this.props.margin;\n  }\n\n  private _computeBoxSize(): number { \n     return Math.floor(\n       (Math.min(window.innerWidth, window.innerHeight) -\n       this._computePaddingInPage())/this.props.numberOfBoxesPerSide\n      );\n  }\n\n  boxSize = this._computeBoxSize();\n  boxes = () => this.props.renderBoxes(this.boxSize);\n\n  render() {\n    const style = {\n      \"--size\": this._computeBoxSize()*this.props.numberOfBoxesPerSide + 'px',\n    } as React.CSSProperties; \n    return (\n      <div className=\"GalleryLayout\" style={style}>{this.boxes()}</div>\n    )\n  }\n}\n\nexport default Gallery;","import React from 'react';\nimport Box, { Corner } from '../ColorBoxLightsOut/Box';\nimport './LightsOut.css';\nimport Gallery, { GalleryProps } from '../Gallery-Layout/Gallery';\n\ninterface LightsOutState {\n  active: boolean[];\n  targetedBoxes: boolean[];\n  turnTriggers: number[];\n  sinkTriggers: number[];\n}\n\nclass LightsOut extends React.Component {\n  config = {\n    numberOfBoxesPerSide: 10,\n    margin: 120,\n    durationInSec: 0.2,\n    allRounded: false,\n  }\n  state = {\n    active: this.initializeWinnableConfig(this.config.numberOfBoxesPerSide * 2),\n    targetedBoxes: new Array(this.config.numberOfBoxesPerSide**2).fill(false),\n    turnTriggers: new Array(this.config.numberOfBoxesPerSide**2).fill(0),\n    sinkTriggers: new Array(this.config.numberOfBoxesPerSide**2).fill(0),\n  }\n\n  private initializeWinnableConfig(n: number): boolean[] {\n    const total = this.config.numberOfBoxesPerSide**2;\n    const result: boolean[] = new Array(total).fill(false);\n    for (let i = 0; i < 18; i++) {\n      const index = Math.floor(Math.random()*total);\n      const region = this.getRegionAroundIndex(index);\n      region.forEach(j => result[j] = !result[j]);\n    }\n    return result;\n  }\n\n  renderBoxes = (boxSize: number) => {\n    return new Array(this.config.numberOfBoxesPerSide**2).fill('').map((_, index) =>\n      <Box\n        frozen={!this.gameOn}\n        width={boxSize}\n        height={boxSize}\n        index={index}\n        active={this.state.active[index]}\n        rounded={this.cornerToRound(index)}\n        isTargeted={this.state.targetedBoxes[index]}\n\n        turnTrigger={this.state.turnTriggers[index]}\n        sinkTrigger={this.state.sinkTriggers[index]}\n        beenClicked={this.handleClicked}\n        beenEntered={this.handleEntered}\n        beenLeft={this.handleLeft}\n        toggleMe={this.toggleTargetedBox}\n        key={index}></Box>)\n  \n  }\n  render() {\n    const props: GalleryProps = {\n      renderBoxes: this.renderBoxes,\n      ...this.config\n    }\n    const message = this.gameOn ? 'Lights Out' : 'Totally Nailed It!'\n    const titleClass = \"lightsout\" + (this.gameOn ? '' : ' finished');\n    return <>\n      <h1 className={titleClass}>{message}</h1>\n      <Gallery {...props}/>\n    </>;\n  }\n\n  get gameOn(): boolean {\n    return this.state.active.some(boxActive => boxActive);\n  }\n  \n  handleEntered = (i: number) => this.setState((currSt: LightsOutState) => this.sinkAroundIndex(currSt, i));\n  handleLeft = (i: number) => this.setState((currSt: LightsOutState) => this.unSinkAroundIndex(currSt, i));\n  handleClicked = (i: number) => this.setState((currSt: LightsOutState) => this.turnAroundIndex(currSt, i));\n  \n  toggleTargetedBox = (i: number) => {\n    const update = (currSt: LightsOutState) => {\n      const newVals = currSt.active.slice();\n      newVals[i] = !newVals[i];\n      return {active: newVals};\n    }\n    this.setState(update);\n  }\n  \n  private getRegionAroundIndex(index: number): number[] {\n      const side = this.config.numberOfBoxesPerSide;\n      const region = [index];\n      if (index % side !== 0) {\n        region.push(index - 1);\n      }\n      if (index % side !== side - 1) {\n        region.push(index + 1);\n      }\n      if (index >= side) {\n        region.push(index - side);\n      }\n      if (index + side < side**2) {\n        region.push(index + side);\n      }\n      return region;\n  }\n\n  private sinkAroundIndex(currSt: LightsOutState, index: number): Partial<LightsOutState> {\n    const triggerVals = currSt.sinkTriggers.slice();\n    const targetedFlags = currSt.targetedBoxes.slice();\n    this.getRegionAroundIndex(index).forEach(i => {\n      triggerVals[i]++;\n      targetedFlags[i] = true;\n    });\n    return {\n      sinkTriggers: triggerVals,\n      targetedBoxes: targetedFlags\n    };\n  }\n  \n  private unSinkAroundIndex(currSt: LightsOutState, index: number): Partial<LightsOutState> {\n    const triggerVals = currSt.sinkTriggers.slice();\n    const targetedFlags = currSt.targetedBoxes.slice();\n    this.getRegionAroundIndex(index).forEach(i => {\n      triggerVals[i]--;\n      targetedFlags[i] = false;\n    });\n    return {\n      sinkTriggers: triggerVals,\n      targetedBoxes: targetedFlags\n    };\n  }\n  \n  private turnAroundIndex(currSt: LightsOutState, index: number): Partial<LightsOutState> {\n    const triggerVals = currSt.turnTriggers.slice();\n    const targetedFlags = currSt.targetedBoxes.slice();\n    this.getRegionAroundIndex(index).forEach(i => {\n      triggerVals[i]++;\n    });\n    return {\n      turnTriggers: triggerVals,\n      targetedBoxes: targetedFlags\n    };\n  }\n\n  private cornerToRound(i: number): Corner {\n    if (this.config.allRounded) {\n      return Corner.ALL;\n    }\n    if (i === 0) {\n      return Corner.TL;\n    }\n    if (i === this.config.numberOfBoxesPerSide - 1) {\n      return Corner.TR;\n    }\n    if (i === this.config.numberOfBoxesPerSide**2 - this.config.numberOfBoxesPerSide) {\n      return Corner.BL;\n    }\n    if (i === this.config.numberOfBoxesPerSide**2 - 1) {\n      return Corner.BR;\n    }\n    return Corner.NONE;\n  }\n}\n\nexport default LightsOut;","import React from 'react';\nimport './App.css';\nimport LightsOut from './Gallery/LightsOut';\n\n\nconst App: React.FC = () => {\n\n  return (\n    <div className=\"App\">\n      <LightsOut></LightsOut>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}